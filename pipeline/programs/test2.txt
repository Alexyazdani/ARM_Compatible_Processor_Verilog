///////////////////////////////////////////////////////////////
// Test for simple addition with LDR (2 + 4 = 6)
//  MOV R0, #0              // Base Address (Dmem[0])
//  MOV R1, #1              // Base Address (Dmem[1])
//  MOV R2, #0              // Offset
//  MOV R3, #0              // Offset
//  NOP
//  NOP
//  NOP
//  LDR R4, [R0, R2]        // Load R0+R2 into R4
//  LDR R5, [R1, R3]        // Load R1+R3 into R5
//  NOP
//  NOP
//  NOP
//  ADD R5, R5, R2
--------------------------------
Cond    I OpCo S Rn   Rd   Op2
1110 00 1 1101 0 0000 0000 000000000000 // MOV (imm)
1110 00 1 1101 0 0000 0001 000000000001 // MOV (imm)
1110 00 1 1101 0 0000 0010 000000000000 // MOV (imm)
1110 00 1 1101 0 0000 0011 000000000000 // MOV (imm)

1110 11 0 0000 0 0000 0000 000000000000 // NOP
1110 11 0 0000 0 0000 0000 000000000000 // NOP
1110 11 0 0000 0 0000 0000 000000000000 // NOP

Cond    I P U B W L Rn   Rd   Shift    Rm
1110 01 0 0 0 0 0 1 0000 0100 00000000 0010 // LDR
1110 01 0 0 0 0 0 1 0001 0101 00000000 0011 // LDR

1110 11 0 0000 0 0000 0000 000000000000 // NOP
1110 11 0 0000 0 0000 0000 000000000000 // NOP
1110 11 0 0000 0 0000 0000 000000000000 // NOP

Cond    I OpCo S Rn   Rd   Shift    Rm
1110 00 0 0100 0 0101 0101 00000000 0010 // ADD (reg)
-------------------------------
IMEM:
11100011101000000000000000000000
11100011101000000001000000000001
11100011101000000010000000000000
11100011101000000011000000000000
11101100000000000000000000000000
11101100000000000000000000000000
11101100000000000000000000000000
11100100000100000100000000000010
11100100000100010101000000000011
11101100000000000000000000000000
11101100000000000000000000000000
11101100000000000000000000000000
11100000100001010101000000000010
11101100000000000000000000000000
11101100000000000000000000000000
11101100000000000000000000000000

DMEM:
0000000000000000000000000000000000000000000000000000000000000010
0000000000000000000000000000000000000000000000000000000000000100

Expected Result:
R1 = 1
R4 = 2
R5 = 4